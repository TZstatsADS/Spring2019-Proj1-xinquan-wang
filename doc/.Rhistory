theme(axis.title.y=element_blank())
mydata %>%
filter(!is.na(predicted_category)) %>%
ggplot(., aes(x = reorder(predicted_category, predicted_category, function(x) -length(x)))) +
geom_bar(fill = rep(brewer.pal(7,'RdOrYl'),each=1)) +
coord_flip() +
theme(axis.title.y=element_blank())
Rd
mydata %>%
filter(!is.na(predicted_category)) %>%
ggplot(., aes(x = reorder(predicted_category, predicted_category, function(x) -length(x)))) +
geom_bar(fill = rep(brewer.pal(7,'YlOrRd'),each=1)) +
coord_flip() +
theme(axis.title.y=element_blank())
mydata %>%
filter(!is.na(predicted_category)) %>%
ggplot(., aes(x = reorder(predicted_category, predicted_category, function(x) -length(x)))) +
geom_bar(fill = rep(brewer.pal(7,-'YlOrRd'),each=1)) +
coord_flip() +
theme(axis.title.y=element_blank())
mydata %>%
filter(!is.na(predicted_category)) %>%
ggplot(., aes(x = reorder(predicted_category, predicted_category, function(x) -length(x)))) +
geom_bar(fill = rep(brewer.pal(-7,'YlOrRd'),each=1)) +
coord_flip() +
theme(axis.title.y=element_blank())
mydata %>%
filter(!is.na(predicted_category)) %>%
ggplot(., aes(x = reorder(predicted_category, predicted_category, function(x) length(x)))) +
geom_bar(fill = rep(brewer.pal(7,'YlOrRd'),each = 1)) +
coord_flip() +
theme(axis.title.y=element_blank())
## combine two datasets
library(dplyr)
library(ggplot2)
demo <- read.csv("/Users/wangxinquan/Desktop/2sem/STAT5243/Spring2019-Proj1-xinquan-wang/output/demographic.csv")
HM <- read.csv("/Users/wangxinquan/Desktop/2sem/STAT5243/Spring2019-Proj1-xinquan-wang/output/processed_moments.csv")
mydata <- as.data.frame(full_join(demo, HM, by = "wid"))
View(mydata)
levels(mydata$country)
dataF <- mydata[gender == f,]
View(mydata)
View(mydata)
dataF <- mydata["gender" == f,]
dataF <- mydata["gender" = f,]
dataF <- mydata(mydata["gender" = f,])
dataF <- mydata["gender" == f,]
dataF <- mydata[gender == f,]
dataF <- mydata[gender == "f",]
dataF <- mydata[,gender]
dataF <- mydata[mydata$gender == "f",]
dataM <- mydata[mydata$gender == "m",]
library(dplyr)
library(ggplot2)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(tidytext)
library(dplyr)
library(ggplot2)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(tidytext)
dataF.all <-  TermDocumentMatrix(dataF)
Corpus(DirSource(dataF))
wordcloud(dataF$text, dataF$`sum(count)`,
scale=c(15,0.5),
max.words=100,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
ff.all<-tm_map(dataF, stripWhitespace)
ff.all<-Corpus(DirSource(folder.path))
folder.path="../data/inaugurals/"
speeches=list.files(path = folder.path, pattern = "*.txt")
prex.out=substr(speeches, 6, nchar(speeches)-4)
ff.all<-Corpus(DirSource(folder.path))
write_csv(mydata, "../output/mydata.csv")
library(tidyverse)
write_csv(mydata, "../output/mydata.csv")
folder.path="../output/mydata.csv"
data.all<-Corpus(DirSource(folder.path))
ff.all<-Corpus(dataF)
docs <- Corpus(VectorSource(mydata))
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, character(0))
word.docs <- tm_map(docs, removePunctuation)
word.docs <-TermDocumentMatrix(word.docs)
View(mydata)
docs <- Corpus(VectorSource(mydata))
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, character(0))
docs <- tm_map(docs, removePunctuation)
docs.all <-TermDocumentMatrix(docs)
docs.tidy <- tidy(docs.all)
word.docs <- summarise(group_by(docs.tidy, text), sum(count))
View(word.docs)
word.docs <- summarise(group_by(docs.tidy, gender), sum(count))
View(docs.tidy)
word.docs <- summarise(group_by(docs.tidy, term), sum(count))
wordcloud(word.docs$text, word.docs$`sum(count)`,
scale=c(15,0.5),
max.words=100,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(word.docs$term, word.docs$`sum(count)`,
scale=c(15,0.5),
max.words=100,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
docs <- Corpus(VectorSource(mydata))
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, character(0))
docs <- tm_map(docs, removePunctuation)
docs.all <-TermDocumentMatrix(docs)
docs.tidy <- tidy(docs.all)
word.docs <- summarise(group_by(docs.tidy, term), sum(count))
wordcloud(word.docs$term, word.docs$`sum(count)`,
scale=c(15,0.5),
max.words=100,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
View(docs)
docs <- Corpus(VectorSource(mydata))
View(docs)
## combine two datasets
library(dplyr)
library(ggplot2)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(tidytext)
library(tidyverse)
demo <- read.csv("/Users/wangxinquan/Desktop/2sem/STAT5243/Spring2019-Proj1-xinquan-wang/output/demographic.csv")
HM <- read.csv("/Users/wangxinquan/Desktop/2sem/STAT5243/Spring2019-Proj1-xinquan-wang/output/processed_moments.csv")
mydata <- as.data.frame(full_join(demo, HM, by = "wid"))
docs <- Corpus(VectorSource(mydata))
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, character(0))
docs <- tm_map(docs, removePunctuation)
dtm <-TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
docs.tidy <- tidy(docs.all)
head(d, 10)
View(docs)
docs <- Corpus(VectorSource(mydata$text))
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, character(0))
docs <- tm_map(docs, removeWords, character(0))
docs <- tm_map(docs, removePunctuation)
dtm <-TermDocumentMatrix(docs)
dtm <-TermDocumentMatrix(docs)
m <- as.matrix(dtm)
View(docs)
m <- as.matrix(dtm)
docs.tidy <- tidy(dtm)
head(word.docs, 10)
word.docs <- summarise(group_by(docs.tidy, term), sum(count))
head(word.docs, 10)
View(word.docs)
tail(word.docs, 10)
## combine two datasets
library(dplyr)
library(ggplot2)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(tidytext)
library(tidyverse)
demo <- read.csv("/Users/wangxinquan/Desktop/2sem/STAT5243/Spring2019-Proj1-xinquan-wang/output/demographic.csv")
HM <- read.csv("/Users/wangxinquan/Desktop/2sem/STAT5243/Spring2019-Proj1-xinquan-wang/output/processed_moments.csv")
mydata <- as.data.frame(full_join(demo, HM, by = "wid"))
docs <- Corpus(VectorSource(mydata$text))
View(docs)
docs <- tm_map(docs, stripWhitespace)
View(docs)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, stopwords("english"))
View(docs)
docs <- tm_map(docs, removeWords, character(0))
View(docs)
dtm <-TermDocumentMatrix(docs)
dataF <- mydata[mydata$gender == f,]
dataF <- mydata[mydata$gender == "f",]
dataM <- mydata[mydata$gender == "m",]
docs <- Corpus(VectorSource(dataF$text))
View(docs)
docsF <- Corpus(VectorSource(dataF$text))
docsF <- tm_map(docsF, stripWhitespace)
docsF <- tm_map(docsF, content_transformer(tolower))
docsF <- tm_map(docsF, removeWords, stopwords("english"))
docsF <- tm_map(docsF, removeWords, character(0))
docsF <- tm_map(docsF, removePunctuation)
tdmF <-TermDocumentMatrix(docsF)
tdmF.tidy <- tidy(dtmF)
tdmF.tidy <- tidy(tdmF)
word.docsF <- summarise(group_by(tdmF.tidy, term), sum(count))
tail(word.docsF, 10)
head(word.docsF, 10)
## combine two datasets
library(dplyr)
library(ggplot2)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(tidytext)
library(tidyverse)
demo <- read.csv("/Users/wangxinquan/Desktop/2sem/STAT5243/Spring2019-Proj1-xinquan-wang/output/demographic.csv")
HM <- read.csv("/Users/wangxinquan/Desktop/2sem/STAT5243/Spring2019-Proj1-xinquan-wang/output/processed_moments.csv")
mydata <- as.data.frame(full_join(demo, HM, by = "wid"))
dataF <- mydata[mydata$gender == "f",]
dataM <- mydata[mydata$gender == "m",]
docsF <- Corpus(VectorSource(dataF$text))
docsF <- tm_map(docsF, stripWhitespace)
docsF <- tm_map(docsF, content_transformer(tolower))
docsF <- tm_map(docsF, removeWords, stopwords("english"))
docsF <- tm_map(docsF, removeWords, character(0))
docsF <- tm_map(docsF, removePunctuation)
tdmF <-TermDocumentMatrix(docsF)
tdmF.tidy <- tidy(tdmF)
View(tdmF.tidy)
View(tdmF.tidy)
word.docsF <- summarise(group_by(tdmF.tidy, term), sum(count))
View(word.docsF)
View(word.docsF)
wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale=c(15,0.5),
max.words=100,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale=c(5,0.5),
max.words=100,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale = c(3, 0.5),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"))
wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale = c(4, 0.5),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"))
wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale = c(4.5, 0.5),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"))
wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale = c(4.5, 0.5),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(10,"Blues"))
wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale = c(4.5, 0.5),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"))
wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale = c(4.3, 0.5),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"))
wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale = c(5, 0.3),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"))
wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale = c(5, 0.2),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"))
docsM <- Corpus(VectorSource(dataM$text))
docsM <- tm_map(docsM, stripWhitespace)
docsM <- tm_map(docsM, content_transformer(tolower))
docsM <- tm_map(docsM, removeWords, stopwords("english"))
docsM <- tm_map(docsM, removeWords, character(0))
docsM <- tm_map(docsM, removePunctuation)
tdmM <-TermDocumentMatrix(docsM)
tdmM.tidy <- tidy(tdmM)
word.docsM <- summarise(group_by(tdmM.tidy, term), sum(count))
wordcloud(word.docsM$term, word.docsM$`sum(count)`,
scale = c(5, 0.2),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"))
par(1,2)
dataF <- mydata[mydata$gender == "f",]
dataM <- mydata[mydata$gender == "m",]
## female
docsF <- Corpus(VectorSource(dataF$text))
docsF <- tm_map(docsF, stripWhitespace)
docsF <- tm_map(docsF, content_transformer(tolower))
docsF <- tm_map(docsF, removeWords, stopwords("english"))
docsF <- tm_map(docsF, removeWords, character(0))
docsF <- tm_map(docsF, removePunctuation)
tdmF <-TermDocumentMatrix(docsF)
tdmF.tidy <- tidy(tdmF)
word.docsF <- summarise(group_by(tdmF.tidy, term), sum(count))
wordF <- wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale = c(5, 0.2),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"))
## male
docsM <- Corpus(VectorSource(dataM$text))
docsM <- tm_map(docsM, stripWhitespace)
docsM <- tm_map(docsM, content_transformer(tolower))
docsM <- tm_map(docsM, removeWords, stopwords("english"))
docsM <- tm_map(docsM, removeWords, character(0))
docsM <- tm_map(docsM, removePunctuation)
tdmM <-TermDocumentMatrix(docsM)
tdmM.tidy <- tidy(tdmM)
word.docsM <- summarise(group_by(tdmM.tidy, term), sum(count))
wordM <- wordcloud(word.docsM$term, word.docsM$`sum(count)`,
scale = c(5, 0.2),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"))
par(mfrow=c(1,2))
wordM
wordF
c(wordM,wordF)
par(wordM,wordF)
wordF <- wordcloud(word.docsF$term, word.docsF$`sum(count)`,
scale = c(5, 0.2),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"),
shape = "female")
install.packages("wordcloud2")
library(wordcloud2)
wordF <- wordcloud2(word.docsF$term, word.docsF$`sum(count)`,
scale = c(5, 0.2),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(9,"Blues"),
shape = "female")
wordF <- wordcloud2(word.docsF$term, word.docsF$`sum(count)`,
shape = "female")
wordF <- wordcloud2(word.docsF,
shape = "female")
wordF
wordF <- wordcloud2(word.docsF$term,
shape = "female")
View(word.docsF)
wordF <- wordcloud2(word.docsF$term)
wordF
wordF <- wordcloud2(word.docsF)
wordF
wordF <- wordcloud2(word.docsF， size= 1)
wordF <- wordcloud2(word.docsF, size= 1)
wordF
wordF <- wordcloud2(word.docsF, size= 10)
wordF
View(word.docsF)
figPath = system.file("figs/female.png",package = "wordcloud2")
wordF <- wordcloud2(word.docsF, figPath = figPath, size= 10)
wordF
figPath = system.file("figs/female.png",package = "wordcloud2")
wordF <- wordcloud2(word.docsF, figPath = figPath, size= 10)
wordF <- wordcloud2(word.docsF, figPath = figPath, size= 10)
figPath = system.file("figs/female.png",package = "wordcloud2")
wordF <- wordcloud2(word.docsF, figPath = figPath, size= 10)
link = "http://img.dafont.com/dl/?f=wm_people_1";
download.file(link, "wmpeople1.zip", mode = "wb");
unzip("wmpeople1.zip");
font.add("wmpeople1", "wmpeople1.TTF");
plot_shape <- function(filename, char){
CairoPNG(filename, 500, 400)
##名，宽，高
showtext.begin();  #
plot.new()
offset = par(mar = par()$mar)
par()$mar#The default is c(5, 4, 4, 2) + 0.1.
op = par(mar = c(0,0,0,0))
text(0.6, 0.5, char, family='wmpeople1', cex=32)
#text(0.6, 0.8, 'u', family='wmpeople1', cex=32)
# x,y 位置           cex大小
par(offset)
showtext.end();
dev.off();
}
plot_shape('female.png', 'u')
link = "http://img.dafont.com/dl/?f=wm_people_1";
download.file(link, "wmpeople1.zip", mode = "wb");
unzip("wmpeople1.zip");
font.add("wmpeople1", "wmpeople1.TTF");
wordcloud2(demoFreq)
plot_shape <- function(filename, char){
CairoPNG(filename, 500, 400)
##名，宽，高
showtext.begin();  #
plot.new()
offset = par(mar = par()$mar)
par()$mar#The default is c(5, 4, 4, 2) + 0.1.
op = par(mar = c(0,0,0,0))
text(0.6, 0.5, char, family='wmpeople1', cex=32)
#text(0.6, 0.8, 'u', family='wmpeople1', cex=32)
# x,y 位置           cex大小
par(offset)
showtext.end();
dev.off();
}
plot_shape('female.png', 'u')
install.packages("extrafont")
install.packages("showtext")
library(showtext)
install.packages("showtext")
library(showtext)
font.add("wmpeople1", "wmpeople1.TTF");
install.packages("sysfonts")
library(showtext)
library(sysfonts)
install.packages("XQuartz")
library(sysfonts)
library(showtext)
print(R.version)
install.packages('devtools')
devtools::install_github("lchiffon/wordcloud2")
